# -*- coding: utf-8 -*-
"""FastAPI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v7AwFa6nhHQDCCCiz_gOorg0_R4NY9rV
"""

from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import joblib
import numpy as np

# Load the saved model, scaler, and label encoder
model = joblib.load('/content/telco_churn_model.pkl')
scaler = joblib.load('/content/scaler.pkl')
label_encoder = joblib.load('/content/label_encoder.pkl')

# Initialize FastAPI app
app = FastAPI()

# Define input data model using Pydantic
class CustomerData(BaseModel):
    tenure: float
    MonthlyCharges: float
    TotalCharges: float
    InternetService_Fiber_optic: int
    Contract_Two_year: int
    # Add other features as needed

# Define prediction endpoint
@app.post("/predict")
def predict_churn(data: CustomerData):
    try:
        # Convert input data to a numpy array
        input_data = np.array([[
            data.tenure,
            data.MonthlyCharges,
            data.TotalCharges,
            data.InternetService_Fiber_optic,
            data.Contract_Two_year,
            # Add other features as needed
        ]])

        # Scale the input data
        input_data_scaled = scaler.transform(input_data)

        # Make prediction
        prediction = model.predict(input_data_scaled)
        prediction_label = label_encoder.inverse_transform(prediction)

        return {"churn_prediction": prediction_label[0]}
    except Exception as e:
        raise HTTPException(status_code=400, detail=str(e))

